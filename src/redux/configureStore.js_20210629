import { createStore, applyMiddleware, compose } from "redux";
import thunk from 'redux-thunk';
import createSagaMiddleware from 'redux-saga';
import rootReducers from "./../reducers";
import rootSaga from '../sagas/rootSaga';
import {createWrapper} from 'next-redux-wrapper'

const sagaMiddleware = createSagaMiddleware()

const composeEnhancers =
    process.env.NODE_ENV !== "production" &&
    typeof window === "object" &&
    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
              shouldHotReload:true,
          })
        : compose;


const configureStore = () => {
    const middlewares = [
        thunk,
        sagaMiddleware,
    ];
    const enhancers = [
        applyMiddleware(...middlewares)
    ];

    const store = createStore(
        rootReducers(),
        composeEnhancers(...enhancers)
    );
    sagaMiddleware.run(rootSaga);
    return store;
};
export const store = configureStore({ rootReducers });

const wrapper = createWrapper(configureStore)

export default wrapper

